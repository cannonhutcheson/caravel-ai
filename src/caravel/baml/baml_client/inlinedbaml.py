###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

file_map = {
    
    "APITransform.baml": "class RequestBody {\n  required string[] @description(#\"\n    The list of required parameters. It will appear in an array at the end of JSON.\n  \"#)\n  required_types string[] @description(#\"\n    A list of JSON types, reflecting the types of the required parameters.\n  \"#)\n  all_params string[] @description(#\"\n    A list of all the allowed parameters, including those required.\n  \"#)\n  all_types string[] @description(#\"\n    A list of JSON types, reflecting the types of all allowed parameters.\n  \"#)\n} // RequestBody\n\nfunction ExtractRequestBodySchema(req_body_json: string) -> RequestBody {\n  client \"openai/gpt-4o-mini\"\n  prompt #\"\n    Extract from this content:\n    {{ req_body_json }}\n    {{ ctx.output_format }}\n  \"#\n} // ExtractRequestBody\n\nclass APIRequest {\n  params map<string, string> @description(#\"\n    A mapping of the parameters to their associated values based on user input. Should contain all required values (empty if not given). Do not include nonpopulated, nonrequired values.\n  \"#)\n} // APIRequest\n\nfunction CreateAPIRequestBody(schema: RequestBody, user_prompt: string) -> APIRequest {\n  client \"openai/gpt-4o-mini\"\n  prompt ###\"\n    Using the following schema:\n    {{ schema }}\n    To analyze the user prompt:\n    {{ user_prompt }}\n    {{ctx.output_format}}\n  \"###\n} // MakeRequestBody\n\ntest api_request_construction {\n  functions [CreateAPIRequestBody]\n  args {\n    user_prompt #\"\n      Make a new service entry for vehicle (id 2), completed today. \n    \"#\n    schema {\n      endpoint \"/v2/service_entries\"\n      required [\"completed_at\", \"vehicle_id\", \"meter_entry_attributes\"]\n      required_types [\"string\", \"string\", \"object\"]\n      all_params [\n        \"completed_at\", \n        \"started_at\", \n        \"vehicle_id\", \n        \"vehicle_vin\", \n        \"vendor_id\", \n        \"reference\", \n        \"label_list\", \n        \"general_notes\", \n        \"vmrs_repair_priority_class_id\", \n        \"custom_fields\", \n        \"meter_entry_attributes\", \n        \"secondary_meter_entry_attributes\", \n        \"service_entry_line_items_attributes\", \n        \"issue_ids\", \n        \"service_task_ids\", \n        \"comments_attributes\", \n        \"documents_attributes\", \n        \"images_attributes\", \n        \"labor_subtotal\", \n        \"parts_subtotal\", \n        \"subtotal\", \n        \"discount\", \n        \"discount_percentage\", \n        \"discount_type\", \n        \"tax_1\", \n        \"tax_1_percentage\", \n        \"tax_1_type\", \n        \"tax_2\", \n        \"tax_2_percentage\", \n        \"tax_2_type\", \n        \"total_amount\", \n      ]\n      all_types [\n        \"string\", \n        \"string\", \n        \"object\", \n        \"string\", \n        \"string\", \n        \"string\", \n        \"object\", \n        \"string\", \n        \"string\", \n        \"object\", \n        \"array\", \n        \"array\", \n        \"array\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n        \"number\", \n      ]\n    }\n}\n} // api_request_construction\n\ntest api_req_body {\n  functions [ExtractRequestBodySchema]\n  args {\n    req_body_json ###\"\n     \"/v2/service_entries\": {\n            \"description\": \"Creates a new Service Entry\",\n            \"request_body_example\": {\n                \"completed_at\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\",\n                    \"example\": \"2023-03-14T13:46:27-06:00\",\n                    \"description\": \"The date and time at which the Service Entry was completed.\\nWe recommend using [ISO-8601](/docs/overview/date-formatting)\\nformatted dates to avoid ambiguity.\"\n                },\n                \"started_at\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\",\n                    \"example\": \"2023-03-14T13:46:27-06:00\",\n                    \"description\": \"The date and time at which the Service Entry was started.\\nWe recommend using [ISO-8601](/docs/overview/date-formatting)\\nformatted dates to avoid ambiguity.\"\n                },\n                \"vehicle_id\": {\n                    \"$ref\": \"#/components/schemas/Id\"\n                },\n                \"vehicle_vin\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 17,\n                    \"description\": \"The VIN of the `Vehicle` associated with this Service Entry.\"\n                },\n                \"vendor_id\": {\n                    \"$ref\": \"#/components/schemas/Id\"\n                },\n                \"reference\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 255,\n                    \"description\": \"A reference number for this Service Entry.\"\n                },\n                \"label_list\": {\n                    \"$ref\": \"#/components/schemas/LabelListParameters\"\n                },\n                \"general_notes\": {\n                    \"type\": \"string\",\n                    \"description\": \"Any general notes about this Service Entry.\"\n                },\n                \"vmrs_repair_priority_class_id\": {\n                    \"$ref\": \"#/components/schemas/Id\"\n                },\n                \"custom_fields\": {\n                    \"$ref\": \"#/components/schemas/CustomFields\"\n                },\n                \"meter_entry_attributes\": {\n                    \"description\": \"A Service Entry may be associated with a [Meter\\nEntry](/docs/api/meter-entries)\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"value\": {\n                            \"type\": \"number\",\n                            \"format\": \"float\",\n                            \"example\": \"108043\",\n                            \"description\": \"The value is the actual number on the meter that increments over time.  The unit is determined by the [configured `meter_unit`](https://help.fleetio.com/s/article/Fuel-Settings#vehicle-settings) on the associated Vehicle.\"\n                        },\n                        \"void\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"If you attempt to save a meter value, which is too high or too low, Fleetio's validation rules will reject it. If you need to bypass this validation, you may [mark an entry as void](https://help.fleetio.com/s/article/Meter-Entry-Mark-As-Void-Unmark-As-Void).\"\n                        }\n                    }\n                },\n                \"secondary_meter_entry_attributes\": {\n                    \"description\": \"A Service Entry may also be associated with a secondary [Meter\\nEntry](/docs/api/meter-entries)\",\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"value\": {\n                            \"type\": \"number\",\n                            \"format\": \"float\",\n                            \"example\": \"108043\",\n                            \"description\": \"The value is the actual number on the meter that increments over time.  The unit is determined by the [configured `meter_unit`](https://help.fleetio.com/s/article/Fuel-Settings#vehicle-settings) on the associated Vehicle.\"\n                        },\n                        \"void\": {\n                            \"type\": \"boolean\",\n                            \"description\": \"If you attempt to save a meter value, which is too high or too low, Fleetio's validation rules will reject it. If you need to bypass this validation, you may [mark an entry as void](https://help.fleetio.com/s/article/Meter-Entry-Mark-As-Void-Unmark-As-Void).\"\n                        }\n                    }\n                },\n                \"service_entry_line_items_attributes\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/components/schemas/ServiceEntryLineItemAttributes\"\n                    }\n                },\n                \"issue_ids\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/components/schemas/Id\"\n                    },\n                    \"description\": \"The IDs of any Issues associated with this Service Entry.\"\n                },\n                \"service_task_ids\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/components/schemas/Id\"\n                    },\n                    \"description\": \"The IDs of any Service Tasks associated with this Service Entry.\"\n                },\n                \"comments_attributes\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/components/schemas/CommentsAttributes\"\n                    }\n                },\n                \"documents_attributes\": {\n                    \"type\": \"array\",\n                    \"description\": \"An array of one or more document objects to add to the record.\\nFollow our [Attaching Documents and Images](/docs/overview/attaching-documents-and-images) guide\\nto upload to our third party storage provider in order to obtain `file_url`.\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"name\": {\n                                \"type\": \"string\",\n                                \"maxLength\": 255,\n                                \"description\": \"The name to give the file which will be shown in the UI.\"\n                            },\n                            \"file_url\": {\n                                \"type\": \"string\",\n                                \"maxLength\": 255,\n                                \"description\": \"The URL obtained from our storage provider that points to the file.\"\n                            },\n                            \"file_mime_type\": {\n                                \"type\": \"string\",\n                                \"maxLength\": 255,\n                                \"description\": \"The MIME type of the file. For example, `application/pdf`.\"\n                            },\n                            \"file_name\": {\n                                \"type\": \"string\",\n                                \"maxLength\": 255,\n                                \"description\": \"The name of the file.\"\n                            },\n                            \"file_size\": {\n                                \"type\": \"integer\",\n                                \"description\": \"The size of the file in bytes.\"\n                            }\n                        }\n                    }\n                },\n                \"images_attributes\": {\n                    \"type\": \"array\",\n                    \"description\": \"An array of one or more image objects to add to the record.\\nFollow our [Attaching Documents and Images](/docs/overview/attaching-documents-and-images) guide\\nto upload to our third party storage provider in order to obtain `file_url`.\",\n                    \"items\": {\n                        \"type\": \"object\",\n                        \"properties\": {\n                            \"name\": {\n                                \"type\": \"string\",\n                                \"maxLength\": 255,\n                                \"description\": \"The name to give the image which will be shown in the UI.\"\n                            },\n                            \"file_url\": {\n                                \"type\": \"string\",\n                                \"maxLength\": 255,\n                                \"description\": \"The URL obtained from our storage provider that points to the image.\"\n                            },\n                            \"file_mime_type\": {\n                                \"type\": \"string\",\n                                \"maxLength\": 255,\n                                \"description\": \"The MIME type of the image. For example, `image/png`.\"\n                            },\n                            \"file_name\": {\n                                \"type\": \"string\",\n                                \"maxLength\": 255,\n                                \"description\": \"The name of the image.\"\n                            },\n                            \"file_size\": {\n                                \"type\": \"integer\",\n                                \"description\": \"The size of the image file in bytes.\"\n                            }\n                        }\n                    }\n                },\n                \"labor_subtotal\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"The total cost of labor for this Service Entry.\\nThis is calculated by summing the `labor_cost` of each `Service Entry Line Item`.\"\n                },\n                \"parts_subtotal\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"The total cost of `Parts` for this Service Entry.\\nThis is calculated by summing the `parts_cost` of each `Service Entry Line Item`.\"\n                },\n                \"subtotal\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"The subtotal amount of this Service Entry before any discounts or taxes.\\nThis is calculated by summing the `subtotal` of each `Service Entry Line Item`.\"\n                },\n                \"discount\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"The total discount amount for this Service Entry.\"\n                },\n                \"discount_percentage\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"The total discount percentage for this Service Entry.\"\n                },\n                \"discount_type\": {\n                    \"$ref\": \"#/components/schemas/DiscountType\"\n                },\n                \"tax_1\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"The first tax amount for this Service Entry.\"\n                },\n                \"tax_1_percentage\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"The first tax percentage for this Service Entry.\"\n                },\n                \"tax_1_type\": {\n                    \"$ref\": \"#/components/schemas/TaxType\"\n                },\n                \"tax_2\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"The second tax amount for this Service Entry.\"\n                },\n                \"tax_2_percentage\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"The second tax percentage for this Service Entry.\"\n                },\n                \"tax_2_type\": {\n                    \"$ref\": \"#/components/schemas/TaxType\"\n                },\n                \"total_amount\": {\n                    \"type\": \"number\",\n                    \"format\": \"float\",\n                    \"description\": \"The grand total of this Service Entry.\"\n                }\n            },\n            \"required\": [\n                \"completed_at\",\n                \"vehicle_id\",\n                \"meter_entry_attributes\"\n            ]\n        },\n    \n    \"###\n  }\n}\n\n\n",
    "Intent.baml": "function GetIntent(intents: string[], intent: string) -> string @description(#\"\n    A string formatted in the following manner: <METHOD Intent>, where METHOD is the HTTP Request that will need to be used. \n\"#) {\n    client \"openai/gpt-4o-mini\"\n    prompt #\"\n        Using the following list of intents, \n        {{ intents }}\n        and the user-prompted intent:\n        {{ intent }}\n        output the intent, sans quotes.\n        {{ ctx.output_format }}   \n    \"#\n} // GetIntent\n\ntest get_intent {\n    functions [GetIntent]\n    args {\n        intents [\n            \"POST Add a new vehicle to Fleetio\",\n            \"GET Get a vehicle from Fleetio\",\n            \"PATCH Edit a vehicle in Fleetio\" \n        ]\n        intent #\"upload a new vehicle to fleetio\"#\n    } // args\n} // get_intent",
    "MakePath.baml": "\n\ntemplate_string NoParamProvided() #\"\n    Error: There was insufficient information to infer the parameters of the path.\n\"# // NoParamProbided\n\nfunction MakePath(path: string, user_input: string) -> string @description(#\"\n    A string representing the altered path, filled with the path parameters based on the user input.\n\"#) {\n    client \"openai/gpt-4o-mini\"\n    prompt #\"\n        Using this path outline:\n        {{ path }}\n        Generate the path with path parameters (if any exist) filled in, using information gleaned from this input:\n        {{ user_input }}\n        If the parameter cannot be inferred, return:\n        {{ NoParamProvided() }}\n         If no path parameter exists within {{ path }}, return:\n        {{ path }}\n        {{ ctx.output_format }}\n    \"#\n} // MakePath\n\ntest make_path_param_given {\n    functions [MakePath]\n    args {\n        path #\"/v1/vehicles/{id}\"#\n        user_input #\"Get vehicle with id 1234\"#\n    }\n}\n\ntest make_path_param_not_given {\n    functions [MakePath]\n    args {\n        path #\"/v1/vehicles/{id}\"#\n        user_input #\"Can you get my dad's truck from fleetio? \"#\n    }\n}\n\ntest make_path_no_path_param_present {\n    functions [MakePath]\n    args {\n        path #\"/v1/vehicles/\"#\n        user_input #\"Can you give me all of my vehicles in fleetio?\"#\n    }\n}",
    "ParsingTransform.baml": "\nfunction CreateDescription(current_api_description: string, descriptions: string[]) -> string {\n    client \"openai/gpt-4o-mini\"\n    prompt #\"\n        Using the following description:\n        {{ current_api_description }}\n        Output a single-sentence description that makes sense in human language. Be sure the description you create does not already exist here:\n        {{ descriptions }}\n        {{ ctx.output_format}}\n    \"#\n} // CreateDescription\n\ntest create_description_test {\n    functions [CreateDescription]\n    args {\n        current_api_description #\"\"Cancels an Account that belongs to your organization.\\n\\n:::info\\nThis endpoint is only usable by Fleetio partners with an Organization Token or Partner Token.\\n:::\",\"#\n        descriptions []\n    }\n}",
    "clients.baml": "// Learn more about clients at https://docs.boundaryml.com/docs/snippets/clients/overview\n\nclient<llm> CustomGPT4o {\n  provider openai\n  options {\n    model \"gpt-4o\"\n    api_key env.OPENAI_API_KEY\n  }\n}\n\nclient<llm> CustomGPT4oMini {\n  provider openai\n  retry_policy Exponential\n  options {\n    model \"gpt-4o-mini\"\n    api_key env.OPENAI_API_KEY\n  }\n}\n\nclient<llm> CustomSonnet {\n  provider anthropic\n  options {\n    model \"claude-3-5-sonnet-20241022\"\n    api_key env.ANTHROPIC_API_KEY\n  }\n}\n\n\nclient<llm> CustomHaiku {\n  provider anthropic\n  retry_policy Constant\n  options {\n    model \"claude-3-haiku-20240307\"\n    api_key env.ANTHROPIC_API_KEY\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/round-robin\nclient<llm> CustomFast {\n  provider round-robin\n  options {\n    // This will alternate between the two clients\n    strategy [CustomGPT4oMini, CustomHaiku]\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/fallback\nclient<llm> OpenaiFallback {\n  provider fallback\n  options {\n    // This will try the clients in order until one succeeds\n    strategy [CustomGPT4oMini, CustomGPT4oMini]\n  }\n}\n\n// https://docs.boundaryml.com/docs/snippets/clients/retry\nretry_policy Constant {\n  max_retries 3\n  // Strategy is optional\n  strategy {\n    type constant_delay\n    delay_ms 200\n  }\n}\n\nretry_policy Exponential {\n  max_retries 2\n  // Strategy is optional\n  strategy {\n    type exponential_backoff\n    delay_ms 300\n    mutliplier 1.5\n    max_delay_ms 10000\n  }\n}",
    "generators.baml": "// This helps use auto generate libraries you can use in the language of\n// your choice. You can have multiple generators if you use multiple languages.\n// Just ensure that the output_dir is different for each generator.\ngenerator target {\n    // Valid values: \"python/pydantic\", \"typescript\", \"ruby/sorbet\", \"rest/openapi\"\n    output_type \"python/pydantic\"\n\n    // Where the generated code will be saved (relative to baml_src/)\n    output_dir \"../\"\n\n    // The version of the BAML package you have installed (e.g. same version as your baml-py or @boundaryml/baml).\n    // The BAML VSCode extension version should also match this version.\n    version \"0.76.2\"\n\n    // Valid values: \"sync\", \"async\"\n    // This controls what `b.FunctionName()` will be (sync or async).\n    default_client_mode async\n}\n",
    "resume.baml": "// Defining a data model.\nclass Resume {\n  name string\n  email string\n  experience string[]\n  skills string[]\n}\n\n// Create a function to extract the resume from a string.\nfunction ExtractResume(resume: string) -> Resume {\n  // Specify a client as provider/model-name\n  // you can use custom LLM params with a custom client name from clients.baml like \"client CustomHaiku\"\n  client \"openai/gpt-4o\" // Set OPENAI_API_KEY to use this client.\n  prompt #\"\n    Extract from this content:\n    {{ resume }}\n\n    {{ ctx.output_format }}\n  \"#\n}\n\n// Test the function with a sample resume. Open the VSCode playground to run this.\ntest vaibhav_resume {\n  functions [ExtractResume]\n  args {\n    resume #\"\n      Vaibhav Gupta\n      vbv@boundaryml.com\n\n      Experience:\n      - Founder at BoundaryML\n      - CV Engineer at Google\n      - CV Engineer at Microsoft\n\n      Skills:\n      - Rust\n      - C++\n    \"#\n  }\n}\n",
}

def get_baml_files():
    return file_map